{"version":3,"sources":["components/BookStoreServiceContext/BookStoreServiceContext.js","services/bookstore-service.js","components/Pages/AboutBookPage.js","components/Pages/CartPage.js","components/Cart/Cart.js","components/Cart/index.js","components/Header/index.js","components/Header/Header.js","utils/compose.js","components/Hoc/withBookStoreService.js","actions/index.js","components/BookCard/index.js","components/BookCard/BookCard.js","components/Spinner/index.js","components/Spinner/Spinner.js","components/ErrorIndicator/index.js","components/ErrorIndicator/ErrorIndicator.js","components/BookCardList/BookCardList.js","components/BookCardList/index.js","components/Table/Table.js","components/Table/index.js","components/App/index.js","components/App/App.js","components/ErrorBoundry/index.js","components/ErrorBoundry/ErrorBoundry.js","reducers/index.js","store.js","index.js"],"names":["React","createContext","BookStoreServiceProvider","Provider","BookStoreServiceConsumer","Consumer","BookStoreService","defaultData","id","title","author","price","total","count","image","Promise","resolve","setTimeout","AboutBookPage","CartPage","Cart","className","href","defaultProps","Header","compose","func","component","reduceRight","previousValue","f","withBookStoreService","WrappedComponent","props","bookStoreService","bookAddedToCart","bookId","type","payload","fetchBooks","dispatch","getBooks","then","response","catch","BookCard","book","onAddedBook","src","alt","style","maxHeight","maxWidth","marginTop","onClick","Spinner","ErrorIndicator","BookCardList","books","map","connect","state","loading","error","ownProps","useEffect","Table","columns","data","TableContainer","cartBooks","onRemovedBook","onDeletedBook","config","useState","sortConfig","setSortConfig","sortedData","useMemo","sort","a","b","field","direction","requestSort","useSortableTable","name","label","item","index","scope","role","aria-label","App","Fragment","path","exact","ErrorBoundry","hasError","info","this","setState","children","Component","defaultState","updateCartItems","slice","updateOrder","quantity","find","cartItemIdx","findIndex","newItem","updateCartItem","reducer","cartItem","store","createStore","ReactDOM","render","value","document","querySelector"],"mappings":"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","file":"static/js/main.2d6e8180.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst {\r\n  Provider: BookStoreServiceProvider,\r\n  Consumer: BookStoreServiceConsumer,\r\n} = React.createContext();\r\n\r\nexport { BookStoreServiceProvider, BookStoreServiceConsumer };\r\n","export default class BookStoreService {\r\n  defaultData = [\r\n    {\r\n      id: 1,\r\n      title: 'JavaScript. Detailed guide',\r\n      author: 'David Flanagan',\r\n      price: 3500,\r\n      total: 3500,\r\n      count: 1,\r\n      image: '../img/book1.jpg',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Client-Server Web Apps with JavaScript and Java',\r\n      author: 'Casimir Saternos',\r\n      price: 3200,\r\n      total: 3200,\r\n      count: 1,\r\n      image: '../img/book2.jpg',\r\n    },\r\n  ];\r\n\r\n  getBooks() {\r\n    return new Promise(resolve => setTimeout(resolve(this.defaultData), 700));\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst AboutBookPage = () => <div>About Book Page</div>;\r\n\r\nexport default AboutBookPage;\r\n","import React from 'react';\r\n\r\nconst CartPage = () => <div>Cart Page</div>;\r\n\r\nexport default CartPage;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Cart.css';\r\n\r\nconst Cart = ({ count, price }) => (\r\n  <div className=\"cart\">\r\n    <a className=\"cart-icon\" href=\"#\">\r\n      <i className=\"fa fa-cart-plus\"></i>\r\n    </a>\r\n    <span className=\"cart-status\">\r\n      {count} items (${price})\r\n    </span>\r\n  </div>\r\n);\r\n\r\nCart.propTypes = {\r\n  count: PropTypes.number,\r\n  price: PropTypes.number,\r\n};\r\n\r\nCart.defaultProps = {\r\n  count: 3,\r\n  price: 6700,\r\n};\r\n\r\nexport default Cart;\r\n","import Cart from './Cart';\r\n\r\nexport default Cart;\r\n","import Header from './Header';\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Cart from '../Cart';\r\nimport './Header.css';\r\n\r\nconst Header = () => (\r\n  <div className=\"header\">\r\n    <h1 className=\"logo\">ReStore</h1>\r\n    <Cart />\r\n  </div>\r\n);\r\n\r\nexport default Header;\r\n","const compose = (...func) => component =>\r\n  func.reduceRight((previousValue, f) => f(previousValue), component);\r\n\r\nexport default compose;\r\n","import React from 'react';\r\nimport { BookStoreServiceConsumer } from '../BookStoreServiceContext';\r\n\r\nconst withBookStoreService = () => WrappedComponent =>\r\n  function consumerWrapper(props) {\r\n    return (\r\n      <BookStoreServiceConsumer>\r\n        {bookStoreService => (\r\n          <WrappedComponent {...props} bookStoreService={bookStoreService} />\r\n        )}\r\n      </BookStoreServiceConsumer>\r\n    );\r\n  };\r\n\r\nexport default withBookStoreService;\r\n","// action в случае успешного сетевого запроса\r\nconst booksLoaded = newBooks => ({\r\n  type: 'FETCH_BOOKS_SUCCESS',\r\n  payload: newBooks,\r\n});\r\n\r\n// action для получения данных с сервера\r\nconst booksRequested = () => ({\r\n  type: 'FETCH_BOOKS_REQUEST',\r\n});\r\n\r\n// action в случае ошибки при выполнении сетевого запроса\r\nconst booksError = () => ({\r\n  type: 'FETCH_BOOKS_FAILURE',\r\n});\r\n\r\n// action для добавления экзмепляра книги в корзину\r\nconst bookAddedToCart = bookId => ({\r\n  type: 'BOOK_ADDED_TO_CART',\r\n  payload: bookId,\r\n});\r\n\r\n// action для удаления экзмепляра книги из корзины\r\nconst bookRemovedFromCart = bookId => ({\r\n  type: 'BOOK_REMOVED_FROM_CART',\r\n  payload: bookId,\r\n});\r\n\r\n// action для полного удаления всех экзмепляров книги из корзины\r\nconst bookDeleted = bookId => ({\r\n  type: 'ALL_BOOK_REMOVED_FROM_CART',\r\n  payload: bookId,\r\n});\r\n\r\n// quasi-action для выделения универсальной, часто используемой логики\r\nconst fetchBooks = (dispatch, bookStoreService) => () => {\r\n  dispatch(booksRequested());\r\n  bookStoreService\r\n    .getBooks() // получение данных\r\n    .then(response => dispatch(booksLoaded(response))) // обновление state.books и state.loading\r\n    .catch(() => dispatch(booksError())); // обновление state.books и state.error\r\n};\r\n\r\nexport { fetchBooks, bookAddedToCart, bookRemovedFromCart, bookDeleted };\r\n","import BookCard from './BookCard';\r\n\r\nexport default BookCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './BookCard.css';\r\n\r\nconst BookCard = ({ book, onAddedBook }) => {\r\n  const { id, title, author, price, image } = book;\r\n  return (\r\n    <div className=\"card text-dark bg-light border-dark mb-3\">\r\n      <div className=\"card-header\">{title}</div>\r\n      <img\r\n        src={image}\r\n        className=\"card-img-top\"\r\n        alt=\"Book Image\"\r\n        style={{ maxHeight: '700px', maxWidth: '538px' }}\r\n      ></img>\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{title}</h5>\r\n        <h5 className=\"card-subtitle mb-2 text-muted\">{author}</h5>\r\n        <h3 className=\"card-text\">{price} RUB</h3>\r\n        <button\r\n          className=\"btn btn-success btn-lg\"\r\n          style={{ marginTop: '20px' }}\r\n          onClick={() => onAddedBook(id)}\r\n        >\r\n          Add to Cart\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nBookCard.propTypes = {\r\n  book: PropTypes.object.isRequired,\r\n  onAddedBook: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default BookCard;\r\n","import Spinner from './Spinner';\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => (\r\n  <div className=\"loading-indicator\">\r\n    <div className=\"loadingio-spinner-double-ring-quh3a49vtmd\">\r\n      <div className=\"ldio-9opildb5qm5\">\r\n        <div></div>\r\n        <div></div>\r\n        <div>\r\n          <div></div>\r\n        </div>\r\n        <div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Spinner;\r\n","import ErrorIndicator from './ErrorIndicator';\r\n\r\nexport default ErrorIndicator;\r\n","import React from 'react';\r\n\r\nimport './ErrorIndicator.css';\r\n\r\nconst ErrorIndicator = () => (\r\n  <div className=\"error-indicator\">\r\n    <div className=\"loadingio-spinner-magnify-xvi2eomm9dk\">\r\n      <div className=\"ldio-djr5te9pz2p\">\r\n        <div>\r\n          <div>\r\n            <div></div>\r\n            <div></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <span className=\"error-message\">\r\n      <div>Something has gone wrong!</div>\r\n    </span>\r\n  </div>\r\n);\r\n\r\nexport default ErrorIndicator;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from '../../utils';\r\nimport { withBookStoreService } from '../Hoc';\r\nimport { fetchBooks, bookAddedToCart } from '../../actions';\r\nimport BookCard from '../BookCard';\r\nimport Spinner from '../Spinner';\r\nimport ErrorIndicator from '../ErrorIndicator';\r\n\r\nconst BookCardListContainer = props => {\r\n  const { books, loading, error, fetchBooks, bookAddedToCart } = props;\r\n\r\n  useEffect(() => fetchBooks(), [fetchBooks]);\r\n\r\n  if (loading) return <Spinner />;\r\n  if (error) return <ErrorIndicator />;\r\n\r\n  return <BookCardList books={books} onAddedBook={bookAddedToCart} />;\r\n};\r\n\r\nconst BookCardList = ({ books, onAddedBook }) => (\r\n  <div className=\"row\">\r\n    {books.map(book => (\r\n      <div key={book.id} className=\"col-sm-6\">\r\n        <BookCard book={book} onAddedBook={onAddedBook} />\r\n      </div>\r\n    ))}\r\n  </div>\r\n);\r\n\r\n// принимаем state из store и возвращаем {prop: state.key}\r\n// для передачи state в компонент в качестве props\r\nconst mapStateToProps = state => ({\r\n  books: state.books,\r\n  loading: state.loading,\r\n  error: state.error,\r\n});\r\n\r\n// mapDispatchToProps может быть функцией или объектом\r\n// если функция, то она обязательно принимает dispatch\r\n// возвращает объект {prop: (newData) => dispatch(action)} для передачи dispatched prop в компонент\r\n// если объект, то это объект с action creator, action creator автоматически передается в bindActionCreator()\r\n// и возвращает объект {prop: (newData) => dispatch(action)}, где prop это booksLoaded\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  // ownProps нужен, чтобы получить доступ к свойству, приходящему из HOC withBookStoreService()\r\n  const { bookStoreService } = ownProps;\r\n  return {\r\n    fetchBooks: fetchBooks(dispatch, bookStoreService),\r\n    bookAddedToCart: id => dispatch(bookAddedToCart(id)),\r\n  };\r\n};\r\n\r\nBookCardListContainer.propTypes = {\r\n  books: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.bool.isRequired,\r\n  fetchBooks: PropTypes.func.isRequired,\r\n  bookAddedToCart: PropTypes.func.isRequired,\r\n};\r\n\r\nBookCardList.propTypes = {\r\n  books: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onAddedBook: PropTypes.func.isRequired,\r\n};\r\n\r\n// BookCardList обрачивается сначала connect(), потом withBookStoreService()\r\n// withBookStoreService()(connect(mapStateToProps, mapDispatchToProps)(BookCardList))\r\n// compose() позволяет упростить запись\r\nexport default compose(\r\n  withBookStoreService(),\r\n  connect(mapStateToProps, mapDispatchToProps)\r\n)(BookCardListContainer);\r\n","import BookCardList from './BookCardList';\r\n\r\nexport default BookCardList;\r\n","import React, { useState, useMemo } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  bookAddedToCart,\r\n  bookRemovedFromCart,\r\n  bookDeleted,\r\n} from '../../actions';\r\nimport PropTypes from 'prop-types';\r\nimport './Table.css';\r\n\r\n// функциональность сортировки данных в таблице\r\nconst useSortableTable = (data, config = null) => {\r\n  const [sortConfig, setSortConfig] = useState(config);\r\n\r\n  const sortedData = useMemo(() => {\r\n    if (sortConfig !== null) {\r\n      data.sort((a, b) => {\r\n        if (a[sortConfig.field] < b[sortConfig.field]) {\r\n          return sortConfig.direction === 'asc' ? -1 : 1;\r\n        }\r\n        if (a[sortConfig.field] > b[sortConfig.field]) {\r\n          return sortConfig.direction === 'asc' ? 1 : -1;\r\n        }\r\n        return 0;\r\n      });\r\n    }\r\n\r\n    return data;\r\n  }, [data, sortConfig]);\r\n\r\n  const requestSort = field => {\r\n    let direction = 'asc';\r\n    if (sortConfig && sortConfig.direction === 'asc') {\r\n      direction = 'desc';\r\n    }\r\n    setSortConfig({ field, direction });\r\n  };\r\n\r\n  return { sortedData, requestSort };\r\n};\r\n\r\n// настройка таблицы и логика рендера\r\nconst TableContainer = props => {\r\n  const { books, onAddedBook, onRemovedBook, onDeletedBook } = props;\r\n  const { sortedData, requestSort } = useSortableTable(books);\r\n\r\n  const columnProperties = [\r\n    { name: 'id', label: '#' },\r\n    { name: 'title', label: 'Book Title' },\r\n    { name: 'count', label: 'Count' },\r\n    { name: 'price', label: 'Total price' },\r\n    { name: 'action', label: 'Action' },\r\n  ];\r\n\r\n  const columns = columnProperties.map((item, index) => {\r\n    const { name, label } = item;\r\n    const columnClassName = 'btn btn-primary';\r\n    return (\r\n      <th key={index} scope=\"col\">\r\n        <button className={columnClassName} onClick={() => requestSort(name)}>\r\n          {label}\r\n        </button>\r\n      </th>\r\n    );\r\n  });\r\n\r\n  const data = sortedData.map((item, index) => {\r\n    const { id, title, count, total } = item;\r\n    return (\r\n      <tr key={index}>\r\n        <th scope=\"row\">{id}</th>\r\n        <td>{title}</td>\r\n        <td>{count}</td>\r\n        <td>{total}</td>\r\n        <td>\r\n          <div className=\"btn-group\" role=\"group\" aria-label=\"Buttons\">\r\n            <button\r\n              className=\"btn btn-outline-success\"\r\n              onClick={() => onAddedBook(id)}\r\n            >\r\n              <i className=\"fa fa-plus\"></i>\r\n            </button>\r\n            <button\r\n              className=\"btn btn-outline-warning\"\r\n              onClick={() => onRemovedBook(id)}\r\n            >\r\n              <i className=\"fa fa-minus\"></i>\r\n            </button>\r\n            <button\r\n              className=\"btn btn-outline-danger\"\r\n              onClick={() => onDeletedBook(id)}\r\n            >\r\n              <i className=\"fa fa-trash-o\"></i>\r\n            </button>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  return <Table columns={columns} data={data} />;\r\n};\r\n\r\nconst Table = ({ columns, data }) => (\r\n  <div className=\"shopping-table\">\r\n    <h2 className=\"table-title\">Your Order</h2>\r\n    <table className=\"table table-bordered border-primary\">\r\n      <thead>\r\n        <tr className=\"table-primary\">{columns}</tr>\r\n      </thead>\r\n      <tbody>{data}</tbody>\r\n    </table>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({ books: state.cartBooks });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onAddedBook: id => dispatch(bookAddedToCart(id)),\r\n  onRemovedBook: id => dispatch(bookRemovedFromCart(id)),\r\n  onDeletedBook: id => dispatch(bookDeleted(id)),\r\n});\r\n\r\nTableContainer.propTypes = {\r\n  books: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onAddedBook: PropTypes.func.isRequired,\r\n  onRemovedBook: PropTypes.func.isRequired,\r\n  onDeletedBook: PropTypes.func.isRequired,\r\n};\r\n\r\nTable.propTypes = {\r\n  columns: PropTypes.array.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableContainer);\r\n","import TableContainer from './Table';\r\n\r\nexport default TableContainer;\r\n","import App from './App';\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { AboutBookPage, CartPage } from '../Pages';\r\nimport Header from '../Header';\r\nimport BookCardList from '../BookCardList';\r\nimport TableContainer from '../Table';\r\n\r\nconst App = () => (\r\n  <React.Fragment>\r\n    <Header />\r\n    <BookCardList />\r\n    <TableContainer />\r\n    <Switch>\r\n      <Route path=\"/shop-cart\" exact={true} component={CartPage} />\r\n      <Route path=\"/about-book\" exact={true} component={AboutBookPage} />\r\n    </Switch>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default App;\r\n","import ErrorBoundry from './ErrorBoundry';\r\n\r\nexport default ErrorBoundry;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ErrorIndicator from '../ErrorIndicator';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n  state = {\r\n    hasError: false,\r\n  };\r\n\r\n  // аргументы error и info позволяют делать отладку в браузере\r\n  // включаем debugger, далее см. Scope -> Local в браузере\r\n  /*eslint-disable no-unused-vars*/\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    const { hasError } = this.state;\r\n    if (hasError) return <ErrorIndicator />;\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nErrorBoundry.propTypes = {\r\n  children: PropTypes.object.isRequired,\r\n};\r\n","const defaultState = {\r\n  books: [], // исходные данные\r\n  cartBooks: [], // заказанные книги\r\n  loading: true,\r\n  error: false,\r\n};\r\n\r\n// добавление/удаление экземпляра(-ов) книги\r\nconst updateCartItems = (cartBooks, item, index) => {\r\n  // если в заказе еще нет выбранной книги, добавляем новую книгу к заказу\r\n  if (index === -1) {\r\n    return [...cartBooks, item];\r\n  }\r\n  // если количество экземпляров книги = 0, удаляем книгу из заказа\r\n  if (item.count === 0) {\r\n    return [...cartBooks.slice(0, index), ...cartBooks.slice(index + 1)];\r\n  }\r\n  // иначе обновляем заказ, добавляя новый экземпляр книги\r\n  return [...cartBooks.slice(0, index), item, ...cartBooks.slice(index + 1)];\r\n};\r\n\r\n// создание нового объекта (книги) для обновления state (cartBooks)\r\nconst updateCartItem = (book, item = {}, quantity) => {\r\n  const { total = 0, count = 0 } = item;\r\n  return {\r\n    ...book,\r\n    total: total + quantity * book.price,\r\n    count: count + quantity,\r\n  };\r\n};\r\n\r\n// обновление заказа\r\nconst updateOrder = (state, bookId, quantity) => {\r\n  const { books, cartBooks } = state;\r\n  const book = books.find(book => book.id === bookId);\r\n  const cartItemIdx = cartBooks.findIndex(book => book.id === bookId);\r\n  const cartItem = cartBooks[cartItemIdx];\r\n  const newItem = updateCartItem(book, cartItem, quantity);\r\n  return {\r\n    ...state,\r\n    cartBooks: updateCartItems(cartBooks, newItem, cartItemIdx),\r\n  };\r\n};\r\n\r\nconst reducer = (state = defaultState, { type, payload }) => {\r\n  switch (type) {\r\n    // FETCH_..._REQUEST - name convention для получения данных с сервера\r\n    case 'FETCH_BOOKS_REQUEST':\r\n      return { ...state, books: [], loading: true, error: false };\r\n\r\n    // FETCH_..._SUCCESS - name convention для успешного сетевого запроса\r\n    case 'FETCH_BOOKS_SUCCESS':\r\n      return { ...state, books: payload, loading: false };\r\n\r\n    // FETCH_..._REQUEST - name convention для ошибки при выполнении сетевого запроса\r\n    case 'FETCH_BOOKS_FAILURE':\r\n      return { ...state, books: [], error: true };\r\n\r\n    // Добавление экземпляра книги к заказу\r\n    case 'BOOK_ADDED_TO_CART':\r\n      return updateOrder(state, payload, 1);\r\n\r\n    // Удаление экземпляра книги из заказа\r\n    case 'BOOK_REMOVED_FROM_CART':\r\n      return updateOrder(state, payload, -1);\r\n\r\n    // Полное удаление всех экземпляров книги из заказа\r\n    case 'ALL_BOOK_REMOVED_FROM_CART': {\r\n      const bookId = payload;\r\n      const cartItemIdx = state.cartBooks.findIndex(book => book.id === bookId);\r\n      const cartItem = state.cartBooks[cartItemIdx];\r\n      return updateOrder(state, payload, -cartItem.count);\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore } from 'redux';\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","import React, { StrictMode } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider as ReduxProvider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport { BookStoreServiceProvider } from './components/BookStoreServiceContext';\r\nimport BookStoreService from './services/bookstore-service';\r\n\r\nimport App from './components/App';\r\nimport ErrorBoundry from './components/ErrorBoundry';\r\n\r\nimport store from './store';\r\n\r\nconst bookStoreService = new BookStoreService();\r\n\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <ReduxProvider store={store}>\r\n      <ErrorBoundry>\r\n        <BookStoreServiceProvider value={bookStoreService}>\r\n          <Router>\r\n            <App />\r\n          </Router>\r\n        </BookStoreServiceProvider>\r\n      </ErrorBoundry>\r\n    </ReduxProvider>\r\n  </StrictMode>,\r\n  document.querySelector('.root')\r\n);\r\n"],"sourceRoot":""}